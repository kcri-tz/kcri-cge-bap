# Dockerfile to update an existing kcri-cge-bap image.
#
#   Dockerfile for updating an existing kcri-cge-bap:latest image
#   without rebuilding the whole image from scratch.
#
#   Use: docker build -t kcri-cge-bap -f Dockerfile.patch "."

# Start from the existing image
FROM kcri-cge-bap:latest

# Go back to the install root as root
USER root:root
WORKDIR /usr/src

# Note: don't 'COPY ext ext': directory ext exists, and
#       docker's intractable copy logic then nests them
#       unless you are copying multiple directories ...

# Externals
#COPY ext ./
#COPY ext/kma ext/kma
#RUN cd ext/kma && make clean && make && mv kma kma_index kma_shm /usr/local/bin/ && cd .. && rm -rf kma
#RUN mkdir -p ext/picoline
#COPY ext/picoline ext/picoline
#RUN cd ext/picoline && python3 setup.py install && cd .. && rm -rf picoline
#COPY ext/fastq-utils ext/fastq-utils
#RUN cd ext/fastq-utils && make clean && make fastq-stats && cp fastq-stats /usr/local/bin/ && cd .. && rm -rf fastq-utils
#COPY ext/cgmlstfinder/cgMLST.py ext/cgmlstfinder/
#RUN sed -i -Ee 's@^from ete3 import@#from ete3 import@' \
#        'ext/cgmlstfinder/cgMLST.py'

# CGE Services
#COPY ext/resfinder ext/
COPY ext/resfinder ext/resfinder
RUN cd ext/resfinder && pip3 --no-color --no-cache-dir --no-deps install "." && cd .. && rm -rf resfinder
#COPY ext/choleraefinder/choleraefinder.py ext/choleraefinder/

# KCRI BAP package
#COPY src/kcri/bap/__init__.py kcri/bap/
#COPY src/kcri/bap/BAP.py kcri/bap/
#COPY src/kcri/bap/data.py kcri/bap/
#COPY src/kcri/bap/services.py kcri/bap/
#COPY src/kcri/bap/shims/ResFinder.py kcri/bap/shims/
#COPY src/kcri/bap/shims/PointFinder.py kcri/bap/shims/
#COPY src/kcri/bap/shims/CholeraeFinder.py kcri/bap/shims/
#COPY src/kcri/bap/shims/base.py kcri/bap/shims/
#COPY src/kcri/bap/shims/pMLST.py kcri/bap/shims/
#COPY src/kcri/bap/shims/cgMLSTFinder.py kcri/bap/shims/
#COPY src ./
#RUN python3 setup.py install

# Drop down to the original user and workdir
USER nobody:nogroup
WORKDIR /workdir

