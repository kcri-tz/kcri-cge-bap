#!/bin/sh
#
# bap-container-run - run the BAP docker image
#
#   Convenience wrapper for running the kcri-cge-bap docker container.
#
#   NOTE: you will need to set the BAP_DB_DIR and BAP_IMAGE variables
#   below to match your installation, or override them on invocation.
#
# USAGE
#
#   All arguments are passed verbatim to the docker run command, so this
#   script can be used to run any program on PATH in the container:
#
#       bap-container-run kma_index ...
#       bap-container-run virulencefinder ...
#	bap-container-run blastn ...
#
#   Which of course includes the BAP:
#
#       bap-container-run BAP ...
#
#   When invoked without any arguments at all, this script runs an
#   interactive bash in the container:
#
#       bap-container-run
#       nobody@9febb34:~$ _
#
# SETTINGS
#
#   You must set the following variables to match your installation.
#   Note the ${VAR:-default} syntax means that these variables can be
#   overridden from the invoking shell.
#
# BAP_DB_DIR
# - Must be set to the root directory of the CGE databases.
# - If some databases are located elsewhere on your filesystem, and you don't
#   want to keep two copies, simply 'mount them in' by adding to the docker
#   run command below: '-v /my/path/to/foofinder:/databases/foofinder:ro'
# - Default is the path used on the KCRI cluster.
BAP_DB_DIR="${BAP_DB_DIR:-"/hpc/data/genomics/cge/db"}"
#
# BAP_IMAGE
# - Needs changing only if (by default) you want to run a different tag
# - Recommended to do in a mixed development & production environment:
#   tag the stable release to e.g. 'kcri-cge-bap:prod' and set it here.
# The default is the 'latest' (development) build on this machine.
BAP_IMAGE="${BAP_IMAGE:-"kcri-cge-bap:latest"}"

### No changes needed beyond this point, but feel free to look ###

err_exit() { echo "$(basename "$0"): $*" >&2; exit 1; }

[ -d "$BAP_DB_DIR" ] ||
    err_exit "please set BAP_DB_DIR to a valid directory: no such directory: $BAP_DB_DIR"

[ -n "$BAP_IMAGE" ] && [ -n "$(docker image ls -q "$BAP_IMAGE" 2>/dev/null)" ] ||
    err_exit "either docker is not running or BAP_IMAGE ($BAP_IMAGE) is incorrect"

[ -z "$BAP_WORK_DIR" ] || [ -d "$BAP_WORK_DIR" ] ||
    err_exit "no such directory (BAP_WORK_DIR): $BAP_WORK_DIR"

# If no arguments, pass the arguments for entering interactive bash
[ $# -eq 0 ] && { OPT_TI="-ti"; DO_CMD="bash"; } || unset OPT_TI DO_CMD

# Run docker image BAP_IMAGE as the invoking user, with BAP_WORK_DIR mounted
# as workdir, BAP_DB_DIR mounted read-only at /databases, and the host root at /.

exec docker run -u "$(id -u):$(id -g)" $OPT_TI --rm --read-only \
   --tmpfs /run --tmpfs /tmp -v /:/host:ro \
   -v "$BAP_DB_DIR:/databases:ro" \
   -v "${BAP_WORK_DIR:-$PWD}:/workdir" \
   -w /workdir \
   $INTERACTIVE \
   "$BAP_IMAGE" $DO_CMD "$@"

# vim: sts=4:sw=4:si:ai:et
